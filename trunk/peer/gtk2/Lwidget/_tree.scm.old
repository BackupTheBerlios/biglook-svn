;*=====================================================================*/
;*    serrano/prgm/project/biglook/peer/gtk/Lwidget/_tree.scm          */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sat Mar 24 09:14:39 2001                          */
;*    Last change :  Fri May 25 06:11:32 2001 (serrano)                */
;*    Copyright   :  2001 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    The Gtk peer Frame implementation.                               */
;*    definition: @path ../../../biglook/Lwidget/tree.scm@             */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module __biglook_%tree
   
   (import __biglook_%peer
	   __biglook_%bglk-object
	   __biglook_%error
	   __biglook_%container
	   __biglook_%gtk-misc
	   __biglook_%widget
	   __biglook_%scroll)
   
   (extern  (macro %%gtk-tree-new::gtkwidget* ()
		   "gtk_tree_new")
	    (macro %%gtk-tree-item-new::gtkwidget* ()
		   "gtk_tree_item_new")
	    (macro %%gtk-tree-append::void (::gtktree* ::gtkwidget*)
		   "gtk_tree_append")
	    (macro %%gtk-tree-item-set-subtree::void
		   (::gtktreeitem* ::gtkwidget*)
		   "gtk_tree_item_set_subtree")
	    (macro %%gtk-tree-item-remove-subtree::void
		   (::gtktreeitem*)
		   "gtk_tree_item_remove_subtree")
	    (macro %%gtk-tree-set-view-mode::void (::gtktree* ::int)
		   "gtk_tree_set_view_mode")
	    (macro %%gtk-tree-view-item::int "GTK_TREE_VIEW_ITEM")
	    (macro %%gtk-tree-item-expand::void (::gtktreeitem*)
		   "gtk_tree_item_expand")
	    (macro %%gtk-tree-item-collapse::void (::gtktreeitem*)
		   "gtk_tree_item_collapse"))
   
   (static (class %tree::%container)

	   (class %tree-item::%container))

   (export (%make-%tree ::%bglk-object)
	   (%make-%tree-item ::%bglk-object)
	   
	   (%tree-add! ::%bglk-object ::%bglk-object)
	   (%tree-item-add! ::%bglk-object ::%bglk-object)
	   
	   (%tree-item-remove! c::%bglk-object ::%bglk-object)))

;*---------------------------------------------------------------------*/
;*    %make-%tree ...                                                  */
;*---------------------------------------------------------------------*/
(define (%make-%tree o::%bglk-object)
   (instantiate::%tree
      (%builtin (gtkobject (%%gtk-tree-new)))
      (%bglk-object o)))
 
;*---------------------------------------------------------------------*/
;*    %make-%tree-item ...                                             */
;*---------------------------------------------------------------------*/
(define (%make-%tree-item o::%bglk-object)
   (instantiate::%tree-item
      (%builtin (gtkobject (%%gtk-tree-item-new)))
      (%bglk-object o)))

;*---------------------------------------------------------------------*/
;*    %tree-add! ...                                                   */
;*---------------------------------------------------------------------*/
(define (%tree-add! c::%bglk-object w::%bglk-object)
   (%%gtk-tree-append (gtktree (%tree-%builtin (%bglk-object-%peer c)))
		      (gtkwidget (%peer-%builtin (%bglk-object-%peer w))))
   c)

;*---------------------------------------------------------------------*/
;*    %tree-item-add! ...                                              */
;*---------------------------------------------------------------------*/
(define (%tree-item-add! c::%bglk-object w::%bglk-object)
   (%%gtk-tree-item-set-subtree
    (gtktreeitem (%tree-item-%builtin (%bglk-object-%peer c)))
    (gtkwidget (%peer-%builtin (%bglk-object-%peer w))))
   c)

;*---------------------------------------------------------------------*/
;*    %tree-item-remove! ...                                           */
;*---------------------------------------------------------------------*/
(define (%tree-item-remove! c::%bglk-object w::%bglk-object)
   (%%gtk-tree-item-remove-subtree
    (gtktreeitem (%tree-item-%builtin (%bglk-object-%peer c))))
   c)
